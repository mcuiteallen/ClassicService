const dbmsHttp = require('dbmsHttp');
const DbmsHttp = new dbmsHttp();
const fs = require('fs');

async function insertInfluxData() { //Insert Data
  let tmpTags = { "name": "kobe", "id": "123" };
  let tmpFields = {
    "field1": 1,
    "field2": "text",
    "field3": true
  };
  let time =  Date.now();
  let insertInfluxReq = await DbmsHttp.insertInfluxData('testTable', tmpTags, tmpFields, time, 'testDB');
}

async function queryInfluxData () {  //Query Data
  let time =  Date.now();
  let tmpFields = ["field1", "field2"];
  let tmpTag = [{"logic":"&&", "key":"name", "val": "kobe", "conditions":"="}, {"logic":"&&", "key":"id", "val": "123", "conditions":"="}]	;
  let tmpSubQuery = [{"logic":"&&", "key":"field1", "val": 0, "conditions":">"}, {"logic":"&&", "key":"field2", "val": "text", "conditions":"="}]	;
  let queryInfluxReq1 = await DbmsHttp.queryInfluxData( 'testTable', 'none', 'none' , 'none', time, time+1000, 'testDB');    
  let queryInfluxReq2 = await DbmsHttp.queryInfluxData('testTable', tmpTag, tmpFields, 'none', time, time+1000, 'testDB'); 
  let queryInfluxReq3 = await DbmsHttp.queryInfluxData('testTable', 'none', 'none', tmpSubQuery, time, time+1000, 'testDB'); 
  let queryInfluxReq4 = await DbmsHttp.queryInfluxData('testTable', 'none', tmpFields, tmpSubQuery, time, time+1000, 'testDB'); 
}


async function importInfluxData () {  //Import Data
  let formData =  {
    myCsv: fs.createReadStream('./testTable_1603707222160.csv'),
    measurement: 'testCsvTable',
    dbName: 'testDB'
  } 
  let importInfluxReq1 = await DbmsHttp.importInfluxData(formData);  
}

async function exportInfluxData () {  //Export Data
  let exportInfluxReq1 = await DbmsHttp.exportInfluxData( 'testCsvTable', 'none', 'none' , 'none', 1603699555117, 1603700017052, 'testDB');    
}

async function updateInfluxDuration () {  // Update Influx Duration
  let updateInfluxDurationReq1 = await DbmsHttp.updateInfluxDuration('testDB', 100000);  
}

async function dropInfluxDB () {  //Drop DB 
  let dropInfluxDBReq1 = await DbmsHttp.dropInfluxDB(['testDB']);   
}

async function getMeasurementListInfluxData () {  //Get Measurement List
  let getMeasurementListInfluxDataReq1 = await DbmsHttp.getMeasurementListInfluxData('testDB');   
}

async function getDBListInfluxData () {  //Get DB List
  let getDBListInfluxDataReq1 = await DbmsHttp.getDBListInfluxData();   
}

